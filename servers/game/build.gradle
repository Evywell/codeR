plugins {
    id 'coder.code-quality'
    id 'coder.global'
    id 'coder.debug'
    id 'application'
}

dependencies {
    compile project(':core')

    testCompile project(':core').sourceSets.test.output
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                'fr/rob/entities/**',
                'fr/rob/game/infrastructure/**',
                'fr/rob/game/domain/network/**',
                'fr/rob/game/domain/setup/tasks/TaskAuthCollectJWTPublicKey.class',
                'fr/rob/game/domain/setup/tasks/CertsResponse.class',
                'fr/rob/game/Main**',
                'fr/rob/game/GameServerSupervisorApplication.class'
            ])
        }))
    }
}

jacoco {
    toolVersion = "0.8.6"
}

jar {
    manifest {
        attributes(
                'Main-Class': 'fr.rob.game.Main',
                'Class-Path': configurations.compile.collect { it.getAbsolutePath() }.join(' ')
        )
    }
}

mainClassName = 'fr.rob.game.Main'
