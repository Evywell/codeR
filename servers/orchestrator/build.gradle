plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'java'
    id 'application'
    id 'jacoco'
    id 'org.jlleitschuh.gradle.ktlint' version '10.0.0'
}

ktlint {
    disabledRules = ["indent", "chain-wrapping"]
    verbose = true
}

dependencies {
    compile project(':core')
    compile project(':client')
    compile project(':shared')
    testCompile project(':core').sourceSets.test.output

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.1")
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.1"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                'fr/rob/entities/**',
            ])
        }))
    }

    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

jacoco {
    toolVersion = "0.8.7"
}

mainClassName = 'fr.rob.orchestrator.Main'
