plugins {
    id 'coder.code-quality'
    id 'coder.global'
    id 'coder.debug'
    id 'application'
}

applicationDefaultJvmArgs = ["-Dcom.sun.management.jmxremote", "-Dcom.sun.management.jmxremote.port=9010", "-Dcom.sun.management.jmxremote.local.only=false", "-Dcom.sun.management.jmxremote.authenticate=false", "-Dcom.sun.management.jmxremote.ssl=false"]

dependencies {
    compile project(':core')
    compile project(':orchestrator:shared')
    implementation 'fr.raven.log:lib:0.1.1'

    testCompile project(':core').sourceSets.test.output
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                'fr/rob/entities/**',
                'fr/rob/login/LoginApplication**',
                'fr/rob/login/Main**',
                'fr/rob/login/network/netty/**',
                'fr/rob/login/config/**',
                'fr/rob/login/**/exception/**'
            ])
        }))
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'fr.rob.login.test.cucumber', 'src/test/kotlin']
        }
    }
}

jar {
    manifest {
        attributes(
            'Main-Class': 'fr.rob.login.Main'
        )
    }
}

application {
    mainClass = 'fr.rob.login.Main'
}
