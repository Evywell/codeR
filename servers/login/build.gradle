plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'java'
    id 'application'
    id 'jacoco'
    id 'org.jlleitschuh.gradle.ktlint' version '10.0.0'
}

ktlint {
    disabledRules = ["indent", "chain-wrapping"]
    verbose = true
}

dependencies {
    compile project(':core')
    compile project(':shared')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'io.cucumber', name: 'cucumber-picocontainer', version: '6.10.4'
    testCompile project(':core').sourceSets.test.output

    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"

    testImplementation("org.junit.jupiter:junit-jupiter-params:5.7.1")
    testImplementation 'io.cucumber:cucumber-java:6.10.4'
    testImplementation 'io.cucumber:cucumber-junit:6.10.4'

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.1")
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                'fr/rob/entities/**',
                'fr/rob/login/LoginApplication**',
                'fr/rob/login/Main**',
                'fr/rob/login/network/netty/**',
                'fr/rob/login/config/**',
                'fr/rob/login/**/exception/**'
            ])
        }))
    }

    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

jacoco {
    toolVersion = "0.8.7"
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'fr.rob.login.test.cucumber', 'src/test/kotlin']
        }
    }
}

mainClassName = 'fr.rob.login.Main'
