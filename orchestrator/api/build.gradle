plugins {
    id 'coder.code-quality'
    id 'coder.global'
    id 'coder.debug'
    id 'application'
    id 'coder.grpc'
    id 'com.avast.gradle.docker-compose'
}

dependencies {
    implementation project(':core')
    implementation project(':orchestrator:shared')

    implementation 'fr.raven.log:lib:0.1.1'
    implementation 'fr.raven.messaging:lib:0.1.1'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'fr/rob/entities/**',
            ])
        }))
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'fr.rob.orchestrator.test.cucumber', 'src/test/kotlin']
        }
    }
}

dockerCompose.isRequiredBy(run)

dockerCompose {
    dockerComposeWorkingDirectory = project.rootProject.projectDir
    projectName = 'coder'
    removeVolumes = false
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

mainClassName = 'fr.rob.orchestrator.api.Main'
